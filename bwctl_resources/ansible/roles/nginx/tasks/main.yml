---
- name: Nginx | Install | Install package
  apt:
    name:  "nginx"
    state: present
  notify:
    - enable nginx
  tags:
    - nginx
  register: nginx_apt_nginx_result
  retries: "{{ ansible_task_retries }}"
  until:    nginx_apt_nginx_result is succeeded

- name: Nginx | Configure | Create directory structure
  file:
    path:  "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode:  "{{ item.mode  | default(omit) }}"
  with_items:
    - { path: "/etc/nginx/sites-available",   mode: "0755" }
    - { path: "/etc/nginx/sites-enabled",     mode: "0755" }
    - { path: "/etc/nginx/streams-available", mode: "0755" }
    - { path: "/etc/nginx/streams-enabled",   mode: "0755" }
    - { path: "/etc/nginx/certs",             mode: "0400", owner: "root", group: "root" }
  tags:
    - nginx

- name: Nginx | Configure | Include sites-enabled
  lineinfile:
    dest:         "/etc/nginx/nginx.conf"
    regexp:       ".*sites-enabled.*"
    line:         "        include /etc/nginx/sites-enabled/*;"
    insertbefore: "}"
    state:        present
  tags:
    - nginx

- name: Nginx | Configure | Include streams-enabled
  lineinfile:
    dest:         "/etc/nginx/nginx.conf"
    regexp:       ".*streams-enabled.*"
    line:         "include /etc/nginx/streams-enabled/*;"
    insertafter:  "^include.*"
    state:        present
  tags:
    - nginx

- name: Nginx | Configure | Increase server_names_hash
  lineinfile:
    dest:         "/etc/nginx/nginx.conf"
    regexp:       ".*server_names_hash.*"
    line:         "        server_names_hash_bucket_size 128;"
    insertbefore: "}"
    state:        present
  tags:
    - nginx

- name: Nginx | Configure | Disable default sites
  file:
    path:   "{{ item }}"
    state:  absent
  with_items:
    - "/etc/nginx/default.conf"
    - "/etc/nginx/conf.d/default.conf"
    - "/etc/nginx/sites-enabled/default"
  tags:
    - nginx

- name: Nginx | Configure | Use stronger Diffie-Hellman parameters
  copy:
    src:   "files/dhparam.pem"
    dest:  "/etc/nginx/certs/dhparam.pem"
    owner: "root"
    group: "root"
    mode:  "0644"
  tags:
    - nginx

- name: Nginx | Configure | Copy SSL certificates
  copy:
    content: "{{ item.content }}"
    dest:     "/etc/nginx/certs/{{ item.filename }}"
    owner:    "root"
    group:    "root"
    mode:     "0400"
    force:    yes
  with_items:
    "{{ nginx_ssl }}"
  when: nginx_ssl | length > 0
  notify:
    - restart nginx
  no_log: True
  tags:
    - nginx

- name: Nginx | Configure | Create website from template
  template:
    src:   "templates/{{ item }}.j2"
    dest:  "/etc/nginx/sites-available/{{ item }}"
    force: yes
  with_items:
    "{{ nginx_sites }}"
  when: nginx_sites | length > 0
  notify:
    - restart nginx
  tags:
    - nginx

- name: Nginx | Configure | Enable websites
  file:
    src:   "/etc/nginx/sites-available/{{ item }}"
    dest:  "/etc/nginx/sites-enabled/{{ item }}"
    state: link
    force: yes
  with_items:
    "{{ nginx_sites }}"
  when: nginx_sites | length > 0
  notify:
    - restart nginx
  tags:
    - nginx

- name: Nginx | Configure | Create streams from template
  template:
    src:   "templates/{{ item }}.j2"
    dest:  "/etc/nginx/streams-available/{{ item }}"
    force: yes
  with_items:
    "{{ nginx_streams }}"
  when: nginx_streams | length > 0
  notify:
    - restart nginx
  tags:
    - nginx

- name: Nginx | Configure | Enable streams
  file:
    src:   "/etc/nginx/streams-available/{{ item }}"
    dest:  "/etc/nginx/streams-enabled/{{ item }}"
    state: link
    force: yes
  with_items:
    "{{ nginx_streams }}"
  when: nginx_streams | length > 0
  notify:
    - restart nginx
  tags:
    - nginx
